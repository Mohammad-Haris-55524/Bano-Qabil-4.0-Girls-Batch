* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.container {
    background-color: aquamarine;
    /* width: 800px; */
    width: 95%;
    height: 90vh;
    margin: auto;
    display: grid;
    /* grid-template-columns: 400px 400px 400px; */
    /* grid-template-columns: 400px 400px 400px; 3 columns of equal width */
    /* grid-template-columns: repeat(5, 200px); */
    /* grid-template-columns: 20% 40vw 200px 1fr; */
    grid-template-columns: 1fr 2fr 1fr 1fr; 
    /* grid-template-columns: repeat(4, 1fr); */
    /* grid-template-columns: repeat(2, auto); */
    /* grid-template-columns: repeat(4,100px); */
    /* grid-template-columns: repeat(auto-fill,100px); */
    /* grid-template-columns: 150px 250px 200px 100px; */
    /* -------------------------------------------------------------------------------------------------- */
    /* 2 rows ko height de di hai  */
    /* grid-template-rows: 50px 180px; */
    /* grid-template-rows: 1fr 1fr 1fr 2fr; */
    /* jinhy height nahi di hai unki height 300px ho jayegi // agar kisi child ko height nahi di hai to ye height le lega */
    /* grid-auto-rows: 50px;   */
    /* -------------------------------------------------------------------------------------------------- */
     /* column-gap: 1rem; */
    /* row-gap: 2rem; */ 
    /* gap: 1rem 2rem; */
    /* row-gap: 1rem; */
    /* -------------------------------------------------------------------------------------------------- */
    /* justify-content: center; */
    /* -------------------------------------------------------------------------------------------------- */
    /* To check how does this property works must give height to the container and comment the row template properties to view the perfect 
result */
    /* Here the child containers will move vetically in their parent container along y axis */
    /* align-content: center; */

    /* -------------------------------------------------------------------------------------------------- */
    /* Will move the child containers only with respect to the grid lines not in the parent container  */
    /* align-items: stretch; */
    /* align-items: stretch; */

    /* <!----------------------------------------- Grid tempalte area topic # 02 (Its css is written in the last after topic 1 ends) -------------------------------------------*/
    /* ----------------------------------------------------COVER IT IN THE END--------------------------------------------------- */
    /* In the end discuss grid template area and comment grid template column before doing this */
    /* grid-template-areas: "header header header header header"
                        "sidebarMenu main main main aside"
                        "sidebarMenu main main main aside"
                        "sidebarMenu main main main aside"
                        "sidebarMenu main main main aside"
                        "sidebarMenu main main main aside"
                        "footer footer footer footer footer"; */
    /* grid-template-areas: "header header header header"
                            "main main main sidebar"
                            "footer footer footer footer"; */
    /* grid-template-areas: "header header header header" "main main main sidebar" "footer footer footer footer"; */
    /* grid-template-areas: "header header header header" "main main main sidebar" "footer footer footer footer"; */
    /* ----------------------------------------------------------------------------------------------------------------------- */

}

/* -------------------------------------------------------------This CSS PART BELONGS TO TOPIC # 01 OF CSS .-------------------------------------------------------- */

.child {
    background-color: red;
    border: 2px solid black;
    /* height: 50px; */
    padding: 12px;
    /* width: 20%; */
}

/* --------------------------------------- Notes ------------------------------------------------ */
.child1{
/* For better understanding their should be more than 2 childs in a row so add one more grid template column in parent container */
/* Always prefer column start and column end order with respect to the no of parent column template grids to avoid any abnormal behavior
 of grid   */
    grid-column-start: 1;
    grid-column-end: 3;
    grid-column: 1 / 3; /* This is the shorthand for the above two properties */
    grid-column: 1 / -1; /* This will take the first column and span it to the last column */
    grid-column: 1 / span 2; /* This will take the first column and span it to the next column */

    grid-row: 1 / 3; /* This will take the first row and span it to the last row */
    /* grid-row: 1 / span 2; This will take the first row and span it to the next row */
grid-area: 1 / 1 / 3 / 3; /* shorthand for grid column start + end and grid row start + end 
This will take the first row and first column and span it to the last row and last column */
}
.child2{
    /* justify-self: end; */
    /* align-self: center; */
        /* grid-column-start: 2;
       grid-column-end: 4; */
}

.child9{
    /* grid-column-start: 1;
    grid-column-end: 4; */
}

.child5{
    /* grid-area: 1 / 1 / 3 / 3; */
    /* grid-area: 1 / 1 / 3 / 4; */

}

/* ---------------------------------------------------------------TOPIC 01 OF GRID ENDS HERE -------------------------------------------------------------*/ 


/* <!-------------------------------------------------------------- Grid tempalte area topic # 02 -----------------------------------------------*/
/* Grid template area  source code practise in last*/
/* .child1 {
    grid-area: header;
    text-align: center;
}    

.child2 {
    grid-area: sidebarMenu;
}    
.child3 {
    grid-area: main;
}    

.child4 {
    grid-area: aside;
}    

.child5 {
    grid-area: footer;
} */    




